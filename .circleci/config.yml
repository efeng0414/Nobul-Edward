version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.11.3

    working_directory: ~/Nobul-Edward

    environment:
      - NODE_ENV: development

    steps:
      - checkout

      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
          - dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - ./node_modules
          key: dependencies-{{ checksum "package.json" }}

      - run: ls

    
  test:
    docker:
    # specify the version you desire here
    - image: circleci/node:8.11.3

    working_directory: ~/Nobul-Edward

    steps:
      - checkout

      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
          - dependencies-
          
      # run tests!
      - run:
          name: "JavaScript Test Suite"
          # yarn here makes sure we are using the local jest binary
          command: yarn test --ci --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"

      - store_test_results:
          path: reports/junit

      - store_artifacts:
          path: reports/junit
          

  deploy:
    docker:
    # specify the version you desire here
    - image: circleci/node:8.11.3

    working_directory: ~/Nobul-Edward

    steps:
      - checkout

      - restore_cache:
          keys:
          - dependencies-{{ checksum "package.json" }}
          - dependencies-

      - run:
          name: Create dist folder
          command: NODE_ENV=development ./node_modules/.bin/webpack --config webpack.client.config.js

      - run:
          name: Firebase Deploy
          command: |
            ./node_modules/.bin/firebase use nobul-edward
            ./node_modules/.bin/firebase deploy --only hosting --token=$FIREBASE_TOKEN

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - test


